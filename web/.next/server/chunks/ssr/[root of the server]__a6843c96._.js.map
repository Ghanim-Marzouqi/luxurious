{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/node/react/luxurious/web/app/context/auth-context.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { createContext, useContext, useState, useEffect, ReactNode } from \"react\";\r\n\r\ntype User = {\r\n  id: string;\r\n  email: string;\r\n  name?: string;\r\n} | null;\r\n\r\ntype AuthContextType = {\r\n  user: User;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => void;\r\n  isLoading: boolean;\r\n  requestPasswordReset: (email: string) => Promise<void>;\r\n  resetPassword: (token: string, newPassword: string) => Promise<void>;\r\n};\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport function AuthProvider({ children }: { children: ReactNode }) {\r\n  const [user, setUser] = useState<User>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Check for existing session on mount\r\n  useEffect(() => {\r\n    // Here you would typically check for a token in localStorage or cookies\r\n    // and validate it with your backend\r\n    const checkAuth = async () => {\r\n      try {\r\n        // Mock authentication check\r\n        const token = localStorage.getItem(\"auth-token\");\r\n        if (token) {\r\n          // In a real app, you would validate this token with your backend\r\n          setUser({ id: \"1\", email: \"user@example.com\" });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Authentication error:\", error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    setIsLoading(true);\r\n    try {\r\n      // Mock API call - replace with your actual authentication API\r\n      // const response = await fetch(\"/api/login\", {\r\n      //   method: \"POST\",\r\n      //   headers: { \"Content-Type\": \"application/json\" },\r\n      //   body: JSON.stringify({ email, password }),\r\n      // });\r\n      // const data = await response.json();\r\n      \r\n      // Mock successful login\r\n      const mockUser = { id: \"1\", email };\r\n      setUser(mockUser);\r\n      localStorage.setItem(\"auth-token\", \"mock-token\");\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      throw error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"auth-token\");\r\n    setUser(null);\r\n  };\r\n\r\n  const requestPasswordReset = async (email: string) => {\r\n    setIsLoading(true);\r\n    try {\r\n      // Mock API call - replace with your actual reset password API\r\n      // await fetch(\"/api/request-password-reset\", {\r\n      //   method: \"POST\",\r\n      //   headers: { \"Content-Type\": \"application/json\" },\r\n      //   body: JSON.stringify({ email }),\r\n      // });\r\n      \r\n      // Mock successful request\r\n      console.log(`Password reset requested for ${email}`);\r\n    } catch (error) {\r\n      console.error(\"Password reset request error:\", error);\r\n      throw error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const resetPassword = async (token: string, newPassword: string) => {\r\n    setIsLoading(true);\r\n    try {\r\n      // Mock API call - replace with your actual reset password confirmation API\r\n      // await fetch(\"/api/reset-password\", {\r\n      //   method: \"POST\",\r\n      //   headers: { \"Content-Type\": \"application/json\" },\r\n      //   body: JSON.stringify({ token, newPassword }),\r\n      // });\r\n      \r\n      // Mock successful password reset\r\n      console.log(`Password reset completed for token ${token}`);\r\n    } catch (error) {\r\n      console.error(\"Password reset error:\", error);\r\n      throw error;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout, isLoading, requestPasswordReset, resetPassword }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n} "],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAmBA,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,SAAS,aAAa,EAAE,QAAQ,EAA2B;IAChE,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAQ;IACvC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,sCAAsC;IACtC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,wEAAwE;QACxE,oCAAoC;QACpC,MAAM,YAAY;YAChB,IAAI;gBACF,4BAA4B;gBAC5B,MAAM,QAAQ,aAAa,OAAO,CAAC;gBACnC,IAAI,OAAO;oBACT,iEAAiE;oBACjE,QAAQ;wBAAE,IAAI;wBAAK,OAAO;oBAAmB;gBAC/C;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,yBAAyB;YACzC,SAAU;gBACR,aAAa;YACf;QACF;QAEA;IACF,GAAG,EAAE;IAEL,MAAM,QAAQ,OAAO,OAAe;QAClC,aAAa;QACb,IAAI;YACF,8DAA8D;YAC9D,+CAA+C;YAC/C,oBAAoB;YACpB,qDAAqD;YACrD,+CAA+C;YAC/C,MAAM;YACN,sCAAsC;YAEtC,wBAAwB;YACxB,MAAM,WAAW;gBAAE,IAAI;gBAAK;YAAM;YAClC,QAAQ;YACR,aAAa,OAAO,CAAC,cAAc;QACrC,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gBAAgB;YAC9B,MAAM;QACR,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,SAAS;QACb,aAAa,UAAU,CAAC;QACxB,QAAQ;IACV;IAEA,MAAM,uBAAuB,OAAO;QAClC,aAAa;QACb,IAAI;YACF,8DAA8D;YAC9D,+CAA+C;YAC/C,oBAAoB;YACpB,qDAAqD;YACrD,qCAAqC;YACrC,MAAM;YAEN,0BAA0B;YAC1B,QAAQ,GAAG,CAAC,CAAC,6BAA6B,EAAE,OAAO;QACrD,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,iCAAiC;YAC/C,MAAM;QACR,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,gBAAgB,OAAO,OAAe;QAC1C,aAAa;QACb,IAAI;YACF,2EAA2E;YAC3E,uCAAuC;YACvC,oBAAoB;YACpB,qDAAqD;YACrD,kDAAkD;YAClD,MAAM;YAEN,iCAAiC;YACjC,QAAQ,GAAG,CAAC,CAAC,mCAAmC,EAAE,OAAO;QAC3D,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yBAAyB;YACvC,MAAM;QACR,SAAU;YACR,aAAa;QACf;IACF;IAEA,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAO;YAAQ;YAAW;YAAsB;QAAc;kBAChG;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/node/react/luxurious/web/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/node/react/luxurious/web/components/ui/toast.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { X } from \"lucide-react\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst toastVariants = cva(\r\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"border bg-background text-foreground\",\r\n        destructive:\r\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\nexport interface ToastProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof toastVariants> {\r\n  title?: string;\r\n  description?: string;\r\n  onClose?: () => void;\r\n}\r\n\r\nexport function Toast({\r\n  className,\r\n  variant,\r\n  title,\r\n  description,\r\n  onClose,\r\n  ...props\r\n}: ToastProps) {\r\n  return (\r\n    <div\r\n      className={cn(toastVariants({ variant }), className)}\r\n      {...props}\r\n    >\r\n      <div className=\"grid gap-1\">\r\n        {title && <div className=\"text-sm font-semibold\">{title}</div>}\r\n        {description && (\r\n          <div className=\"text-sm opacity-90\">{description}</div>\r\n        )}\r\n      </div>\r\n      {onClose && (\r\n        <button\r\n          onClick={onClose}\r\n          className=\"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100\"\r\n        >\r\n          <X className=\"h-4 w-4\" />\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function Toaster() {\r\n  const [isMounted, setIsMounted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsMounted(true);\r\n  }, []);\r\n\r\n  if (!isMounted) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse gap-y-2 p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\">\r\n      {/* Toast elements will be rendered here by the useToast hook */}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,8iBACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAWK,SAAS,MAAM,EACpB,SAAS,EACT,OAAO,EACP,KAAK,EACL,WAAW,EACX,OAAO,EACP,GAAG,OACQ;IACX,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;0BAET,8OAAC;gBAAI,WAAU;;oBACZ,uBAAS,8OAAC;wBAAI,WAAU;kCAAyB;;;;;;oBACjD,6BACC,8OAAC;wBAAI,WAAU;kCAAsB;;;;;;;;;;;;YAGxC,yBACC,8OAAC;gBACC,SAAS;gBACT,WAAU;0BAEV,cAAA,8OAAC,4LAAA,CAAA,IAAC;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAKvB;AAEO,SAAS;IACd,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,aAAa;IACf,GAAG,EAAE;IAEL,IAAI,CAAC,WAAW;QACd,OAAO;IACT;IAEA,qBACE,8OAAC;QAAI,WAAU;;;;;;AAInB","debugId":null}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Projects/node/react/luxurious/web/components/ui/toast-provider.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { createContext, useContext, useState, ReactNode } from \"react\";\r\nimport { Toast } from \"./toast\";\r\n\r\ntype ToastProps = {\r\n  id: string;\r\n  title?: string;\r\n  description?: string;\r\n  variant?: \"default\" | \"destructive\";\r\n};\r\n\r\ntype ToastContextType = {\r\n  toasts: ToastProps[];\r\n  addToast: (toast: Omit<ToastProps, \"id\">) => void;\r\n  removeToast: (id: string) => void;\r\n};\r\n\r\nconst ToastContext = createContext<ToastContextType | undefined>(undefined);\r\n\r\nexport function ToastProvider({ children }: { children: ReactNode }) {\r\n  const [toasts, setToasts] = useState<ToastProps[]>([]);\r\n\r\n  const addToast = (toast: Omit<ToastProps, \"id\">) => {\r\n    const id = Math.random().toString(36).substring(2, 9);\r\n    setToasts((prev) => [...prev, { id, ...toast }]);\r\n\r\n    // Auto dismiss after 5 seconds\r\n    setTimeout(() => {\r\n      removeToast(id);\r\n    }, 5000);\r\n  };\r\n\r\n  const removeToast = (id: string) => {\r\n    setToasts((prev) => prev.filter((toast) => toast.id !== id));\r\n  };\r\n\r\n  return (\r\n    <ToastContext.Provider value={{ toasts, addToast, removeToast }}>\r\n      {children}\r\n      <div className=\"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse gap-y-2 p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\">\r\n        {toasts.map((toast) => (\r\n          <Toast\r\n            key={toast.id}\r\n            title={toast.title}\r\n            description={toast.description}\r\n            variant={toast.variant}\r\n            onClose={() => removeToast(toast.id)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </ToastContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useToast() {\r\n  const context = useContext(ToastContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useToast must be used within a ToastProvider\");\r\n  }\r\n  return context;\r\n} "],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAkBA,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,SAAS,cAAc,EAAE,QAAQ,EAA2B;IACjE,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB,EAAE;IAErD,MAAM,WAAW,CAAC;QAChB,MAAM,KAAK,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,CAAC,GAAG;QACnD,UAAU,CAAC,OAAS;mBAAI;gBAAM;oBAAE;oBAAI,GAAG,KAAK;gBAAC;aAAE;QAE/C,+BAA+B;QAC/B,WAAW;YACT,YAAY;QACd,GAAG;IACL;IAEA,MAAM,cAAc,CAAC;QACnB,UAAU,CAAC,OAAS,KAAK,MAAM,CAAC,CAAC,QAAU,MAAM,EAAE,KAAK;IAC1D;IAEA,qBACE,8OAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAQ;YAAU;QAAY;;YAC3D;0BACD,8OAAC;gBAAI,WAAU;0BACZ,OAAO,GAAG,CAAC,CAAC,sBACX,8OAAC,0HAAA,CAAA,QAAK;wBAEJ,OAAO,MAAM,KAAK;wBAClB,aAAa,MAAM,WAAW;wBAC9B,SAAS,MAAM,OAAO;wBACtB,SAAS,IAAM,YAAY,MAAM,EAAE;uBAJ9B,MAAM,EAAE;;;;;;;;;;;;;;;;AAUzB;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}}]
}